//Source code generated by AppGPT (www.appgpt.tech)
import { mergeTranslations } from 'ra-core';
import polyglotI18nProvider from 'ra-i18n-polyglot';
import enOriginal from 'ra-language-english';
import frOriginal from 'ra-language-french';
import grOriginal from 'ra-language-greek';

const enResources = {
  resources: {
    Therapists: {
      name: 'Therapists',
      fields: {
        Name: 'Name',
        Email: 'Email',
        Password: 'Password',
        Specialization: 'Specialization',
        LicenseNumber: 'License Number',
        ContactNumber: 'Contact Number',
        id: 'id',
      },
    },
    Clients: {
      name: 'Clients',
      fields: {
        Name: 'Name',
        Email: 'Email',
        Password: 'Password',
        Therapist: 'Therapist',
        MoodScale: 'Mood Scale',
        PanicButton: 'Panic Button',
        CBTExercisesFrequency: 'Cbtexercises Frequency',
        MindfulnessExercisesFrequency: 'Mindfulness Exercises Frequency',
        id: 'id',
      },
    },
    Exercises: {
      name: 'Exercises',
      fields: {
        Title: 'Title',
        Description: 'Description',
        Type: 'Type',
        Duration: 'Duration',
        DifficultyLevel: 'Difficulty Level',
        id: 'id',
      },
    },
    MoodEntries: {
      name: 'Mood Entries',
      fields: {
        Client: 'Client',
        Date: 'Date',
        MoodScaleValue: 'Mood Scale Value',
        Notes: 'Notes',
        id: 'id',
      },
    },
  },
};
const frResources = {
  resources: {
    Therapists: {
      name: 'Therapists (fr)',
      fields: {
        Name: 'Name (fr)',
        Email: 'Email (fr)',
        Password: 'Password (fr)',
        Specialization: 'Specialization (fr)',
        LicenseNumber: 'License Number (fr)',
        ContactNumber: 'Contact Number (fr)',
        id: 'id',
      },
    },
    Clients: {
      name: 'Clients (fr)',
      fields: {
        Name: 'Name (fr)',
        Email: 'Email (fr)',
        Password: 'Password (fr)',
        Therapist: 'Therapist (fr)',
        MoodScale: 'Mood Scale (fr)',
        PanicButton: 'Panic Button (fr)',
        CBTExercisesFrequency: 'Cbtexercises Frequency (fr)',
        MindfulnessExercisesFrequency: 'Mindfulness Exercises Frequency (fr)',
        id: 'id',
      },
    },
    Exercises: {
      name: 'Exercises (fr)',
      fields: {
        Title: 'Title (fr)',
        Description: 'Description (fr)',
        Type: 'Type (fr)',
        Duration: 'Duration (fr)',
        DifficultyLevel: 'Difficulty Level (fr)',
        id: 'id',
      },
    },
    MoodEntries: {
      name: 'Mood Entries (fr)',
      fields: {
        Client: 'Client (fr)',
        Date: 'Date (fr)',
        MoodScaleValue: 'Mood Scale Value (fr)',
        Notes: 'Notes (fr)',
        id: 'id',
      },
    },
  },
};
const grResources = {
  resources: {
    Therapists: {
      name: 'Therapists (gr)',
      fields: {
        Name: 'Name (gr)',
        Email: 'Email (gr)',
        Password: 'Password (gr)',
        Specialization: 'Specialization (gr)',
        LicenseNumber: 'License Number (gr)',
        ContactNumber: 'Contact Number (gr)',
        id: 'id',
      },
    },
    Clients: {
      name: 'Clients (gr)',
      fields: {
        Name: 'Name (gr)',
        Email: 'Email (gr)',
        Password: 'Password (gr)',
        Therapist: 'Therapist (gr)',
        MoodScale: 'Mood Scale (gr)',
        PanicButton: 'Panic Button (gr)',
        CBTExercisesFrequency: 'Cbtexercises Frequency (gr)',
        MindfulnessExercisesFrequency: 'Mindfulness Exercises Frequency (gr)',
        id: 'id',
      },
    },
    Exercises: {
      name: 'Exercises (gr)',
      fields: {
        Title: 'Title (gr)',
        Description: 'Description (gr)',
        Type: 'Type (gr)',
        Duration: 'Duration (gr)',
        DifficultyLevel: 'Difficulty Level (gr)',
        id: 'id',
      },
    },
    MoodEntries: {
      name: 'Mood Entries (gr)',
      fields: {
        Client: 'Client (gr)',
        Date: 'Date (gr)',
        MoodScaleValue: 'Mood Scale Value (gr)',
        Notes: 'Notes (gr)',
        id: 'id',
      },
    },
  },
};

const en = mergeTranslations(enOriginal, enResources);
const fr = mergeTranslations(frOriginal, frResources);
const gr = mergeTranslations(grOriginal, grResources);

const translations = { en, fr, gr };
export const i18nProvider = polyglotI18nProvider(
  (locale) => translations[locale],
  'en', //default locale
  [
    { locale: 'en', name: 'English' },
    { locale: 'fr', name: 'Français' },
    { locale: 'gr', name: 'Ελληνικά' },
  ],
);
